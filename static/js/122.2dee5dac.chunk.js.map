{"version":3,"file":"static/js/122.2dee5dac.chunk.js","mappings":"+PAyCA,EApCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAqB,mCAAG,uGACVC,EAAAA,EAAAA,IAAqBJ,GADX,OACtBK,EADsB,OAEtBP,EAAUO,EAAIC,QACpBC,QAAQC,IAAI,MAAOV,GACnBC,EAAWD,GAJiB,2CAAH,qDAM3BK,GACD,GAAE,CAACH,KAGF,yBACsB,IAAnBF,EAAQW,OACPX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACV,4BACE,oCAAYA,MACZ,uBAAID,MAFID,EADA,KAOZ,sEAIP,EC/BD,G,8LCDMG,EAAU,mCACVC,EAAW,gCAEXC,EAAgB,mCAAG,oGACHC,EAAAA,GAAAA,IAAA,UACfF,EADe,oCACqBD,IAFlB,cACjBI,EADiB,yBAIhBA,EAAMC,MAJU,2CAAH,qDAOhBC,EAAc,mCAAG,WAAMC,GAAN,uFACDJ,EAAAA,GAAAA,IAAA,UACfF,EADe,gCACiBD,EADjB,iCACiDO,EADjD,gCADC,cACfH,EADe,yBAIdA,EAAMC,MAJQ,2CAAH,sDAOdG,EAAoB,mCAAG,WAAMtB,GAAN,uFACPiB,EAAAA,GAAAA,IAAA,UACfF,EADe,iBACEf,EADF,oBACqBc,EADrB,oBADO,cACrBI,EADqB,yBAIpBA,EAAMC,MAJc,2CAAH,sDAOpBI,EAAoB,mCAAG,WAAMvB,GAAN,uFACPiB,EAAAA,GAAAA,IAAA,UACfF,EADe,iBACEf,EADF,4BAC6Bc,EAD7B,oBADO,cACrBI,EADqB,yBAIpBA,EAAMC,MAJc,2CAAH,sDAOpBf,EAAoB,mCAAG,WAAMJ,GAAN,uFACPiB,EAAAA,GAAAA,IAAA,UACfF,EADe,iBACEf,EADF,4BAC6Bc,EAD7B,oBADO,cACrBI,EADqB,yBAIpBA,EAAMC,MAJc,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","components/Reviews/index.js","services/api.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviewsFetch } from 'services/api';\nimport {PropTypes} from 'prop-types'\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const dataMovieReviewsFetch = async () => {\n      const res = await getMovieReviewsFetch(movieId);\n      const reviews = res.results;\n      console.log('111', reviews);\n      setReviews(reviews);\n    };\n    dataMovieReviewsFetch();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length !== 0 ? (\n        reviews.map(({ id, content, author }) => (\n          <div key={id}>\n            <h3>Autor: {author}</h3>\n            <p>{content}</p>\n          </div>\n        ))\n      ) : (\n        <p>We don`t have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  id: PropTypes.number,\n  content: PropTypes.string,\n  author: PropTypes.string,\n}\n\nexport default Reviews;","import Reviews from \"./Reviews\";\n\nexport default Reviews","import axios from 'axios';\nconst API_KEY = '68dd2d07f1b8d9799366e4d9411e689b';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrendingFetch = async () => {\n  const fetch = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  return fetch.data;\n};\n\nconst getSearchFetch = async querySearch => {\n  const fetch = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${querySearch}&page=1&include_adult=false`\n  );\n  return fetch.data;\n};\n\nconst getMovieDetailsFetch = async movieId => {\n  const fetch = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return fetch.data;\n};\n\nconst getMovieCreditsFetch = async movieId => {\n  const fetch = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return fetch.data;\n};\n\nconst getMovieReviewsFetch = async movieId => {\n  const fetch = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return fetch.data;\n};\n\nexport {\n  getTrendingFetch,\n  getSearchFetch,\n  getMovieDetailsFetch,\n  getMovieCreditsFetch,\n  getMovieReviewsFetch,\n};\n\n\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","dataMovieReviewsFetch","getMovieReviewsFetch","res","results","console","log","length","map","id","content","author","API_KEY","BASE_URL","getTrendingFetch","axios","fetch","data","getSearchFetch","querySearch","getMovieDetailsFetch","getMovieCreditsFetch"],"sourceRoot":""}