{"version":3,"file":"static/js/247.652d4e48.chunk.js","mappings":"sPAEA,ECCmB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,8BACGF,EAAMG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACT,0BACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMP,GAA1C,UACG,IACAG,MAHKC,EADD,KAUhB,E,SCfD,ECAkB,SAAC,GAAkB,IAAhBI,EAAe,EAAfA,SACnB,OACE,+BACE,kBAAMC,aAAa,MAAMD,SAAUA,EAAnC,WACE,kBACEE,KAAK,OACLC,KAAK,QACLC,YAAY,kBAGd,mBAAQF,KAAK,SAAb,wBAIP,E,SC8BD,EAvCe,WAAO,IAAD,EACnB,GAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAGjDC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBF,EAAJ,CAEA,IAAMG,EAAe,mCAAG,uGACJC,EAAAA,EAAAA,IAAeJ,GADX,OAChBK,EADgB,OAEhBV,EAASU,EAAIC,QACnBV,EAAUD,GAHY,2CAAH,qDAKrBQ,GAP8B,CAQ/B,GAAE,CAACH,IAUJ,OACE,4BACE,4BACE,SAAC,EAAD,CAAWX,SAXI,SAAAkB,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAEfX,EAAgB,CAAEY,MAAOF,EAAKG,SAASD,MAAME,QAC7CJ,EAAKK,OACN,IAMMnB,IAAU,SAAC,EAAD,CAAYf,MAAOe,QAGhC,SAAC,EAAAoB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,EC1CD,G,8LCDMC,EAAU,mCACVC,EAAW,gCAEXC,EAAgB,mCAAG,oGACHC,EAAAA,GAAAA,IAAA,UACfF,EADe,oCACqBD,IAFlB,cACjBI,EADiB,yBAIhBA,EAAMC,MAJU,2CAAH,qDAOhBlB,EAAc,mCAAG,WAAMJ,GAAN,uFACDoB,EAAAA,GAAAA,IAAA,UACfF,EADe,gCACiBD,EADjB,iCACiDjB,EADjD,gCADC,cACfqB,EADe,yBAIdA,EAAMC,MAJQ,2CAAH,sDAOdC,EAAoB,mCAAG,WAAMC,GAAN,uFACPJ,EAAAA,GAAAA,IAAA,UACfF,EADe,iBACEM,EADF,oBACqBP,EADrB,oBADO,cACrBI,EADqB,yBAIpBA,EAAMC,MAJc,2CAAH,sDAOpBG,EAAoB,mCAAG,WAAMD,GAAN,uFACPJ,EAAAA,GAAAA,IAAA,UACfF,EADe,iBACEM,EADF,4BAC6BP,EAD7B,oBADO,cACrBI,EADqB,yBAIpBA,EAAMC,MAJc,2CAAH,sDAOpBI,EAAoB,mCAAG,WAAMF,GAAN,uFACPJ,EAAAA,GAAAA,IAAA,UACfF,EADe,iBACEM,EADF,4BAC6BP,EAD7B,oBADO,cACrBI,EADqB,yBAIpBA,EAAMC,MAJc,2CAAH,qD","sources":["components/MoviesList/index.js","components/MoviesList/MoviesList.jsx","components/SearchBar/index.js","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","pages/Movies/index.js","services/api.jsx"],"sourcesContent":["import MoviesList from \"./MoviesList\";\n\nexport default MoviesList","import { Link, useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\n\nconst MoviesList = ({ items }) => {\n  const location = useLocation();\n  return (\n    <>\n      {items.map(({ title, id }) => (\n        <div key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {' '}\n            {title}\n          </Link>\n        </div>\n      ))}\n    </>\n  );\n};\n\n\n\nMoviesList.propTypes = {\n  items: PropTypes.array.isRequired,\n  title: PropTypes.string,\n  id: PropTypes.number,\n};\n\nexport default MoviesList;","import SearchBox from \"./SearchBar\";\n\nexport default SearchBox","import {PropTypes} from 'prop-types'\n\nconst SearchBar = ({ onSubmit }) => {\n  return (\n    <>\n      <form autoComplete=\"off\" onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search films\"\n        />\n\n        <button type=\"submit\">Search</button>\n      </form>\n    </>\n  );\n};\n\n\n\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n}\n\nexport default SearchBar;","import MoviesList from 'components/MoviesList';\nimport { Suspense } from 'react';\nimport SearchBar from 'components/SearchBar';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { getSearchFetch } from 'services/api';\n\nconst Movies = () => {\n  const [search, setSearch] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const querySearch = searchParams.get('query') ?? '';\n\n\n  useEffect(() => {\n    if (querySearch === '') return;\n\n    const dataSearchFetch = async () => {\n      const res = await getSearchFetch(querySearch);\n      const search = res.results;\n      setSearch(search);\n    };\n    dataSearchFetch();\n  }, [querySearch]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    // if (query.trim() === '') return; // need toaster\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <div>\n      <div>\n        <SearchBar onSubmit={handleSubmit}></SearchBar>\n        {search && <MoviesList items={search}></MoviesList>}\n      </div>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default Movies;","import Movies from \"./Movies\";\n\nexport default Movies","import axios from 'axios';\nconst API_KEY = '68dd2d07f1b8d9799366e4d9411e689b';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst getTrendingFetch = async () => {\n  const fetch = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${API_KEY}`\n  );\n  return fetch.data;\n};\n\nconst getSearchFetch = async querySearch => {\n  const fetch = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${querySearch}&page=1&include_adult=false`\n  );\n  return fetch.data;\n};\n\nconst getMovieDetailsFetch = async movieId => {\n  const fetch = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return fetch.data;\n};\n\nconst getMovieCreditsFetch = async movieId => {\n  const fetch = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return fetch.data;\n};\n\nconst getMovieReviewsFetch = async movieId => {\n  const fetch = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return fetch.data;\n};\n\nexport {\n  getTrendingFetch,\n  getSearchFetch,\n  getMovieDetailsFetch,\n  getMovieCreditsFetch,\n  getMovieReviewsFetch,\n};\n\n\n"],"names":["items","location","useLocation","map","title","id","to","state","from","onSubmit","autoComplete","type","name","placeholder","useState","search","setSearch","useSearchParams","searchParams","setSearchParams","querySearch","get","useEffect","dataSearchFetch","getSearchFetch","res","results","e","preventDefault","form","currentTarget","query","elements","value","reset","Suspense","fallback","API_KEY","BASE_URL","getTrendingFetch","axios","fetch","data","getMovieDetailsFetch","movieId","getMovieCreditsFetch","getMovieReviewsFetch"],"sourceRoot":""}